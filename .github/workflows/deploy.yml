name: Recipe App CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    # 1Ô∏è‚É£ Descargar el c√≥digo
    - name: Checkout code
      uses: actions/checkout@v4
    
    # 2Ô∏è‚É£ Configurar Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          backend/package-lock.json
          frontend/package-lock.json
    
    # 3Ô∏è‚É£ Instalar dependencias del backend
    - name: Install backend dependencies
      run: |
        cd backend
        npm ci
    
    # 4Ô∏è‚É£ Instalar dependencias del frontend
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
    
    # 5Ô∏è‚É£ Ejecutar tests del backend
    - name: Run backend tests
      run: |
        cd backend
        npm test
    
    # 6Ô∏è‚É£ Ejecutar tests del frontend
    - name: Run frontend tests
      run: |
        cd frontend
        npm test

    # 7Ô∏è‚É£ Autenticarse con Google Cloud (solo credenciales)
    - name: Authenticate to Google Cloud
      if: success()
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    # 8Ô∏è‚É£ Instalar CLI de Google Cloud (sin project_id)
    - name: Set up Google Cloud CLI
      if: success()
      uses: google-github-actions/setup-gcloud@v1

    # 9Ô∏è‚É£ Forzar el proyecto correcto
    - name: Set gcloud project
      run: |
        gcloud config unset project || true
        gcloud config set project smiling-wind-475918-h0
        gcloud info
    
    # üîü Configurar Docker para autenticarse con GCP
    - name: Configure Docker for Google Cloud
      if: success()
      run: |
        gcloud auth configure-docker

    # 11Ô∏è‚É£ Construir y subir imagen del backend
    - name: Build and push backend image
      if: success()
      run: |
        cd backend
        docker build -t gcr.io/smiling-wind-475918-h0/recipe-backend:${{ github.sha }} .
        docker push gcr.io/smiling-wind-475918-h0/recipe-backend:${{ github.sha }}

    # 12Ô∏è‚É£ Construir y subir imagen del frontend
    - name: Build and push frontend image
      if: success()
      run: |
        cd frontend
        BACKEND_URL=$(gcloud run services describe recipe-backend --region=${{ secrets.GCP_REGION }} --format='value(status.url)' 2>/dev/null || echo "https://recipe-backend-placeholder.run.app")
        docker build --build-arg VITE_API_URL=$BACKEND_URL -t gcr.io/smiling-wind-475918-h0/recipe-frontend:${{ github.sha }} .
        docker push gcr.io/smiling-wind-475918-h0/recipe-frontend:${{ github.sha }}

    # 13Ô∏è‚É£ Desplegar backend en Cloud Run
    - name: Deploy backend to Cloud Run
      if: success()
      run: |
        gcloud run deploy recipe-backend \
          --image gcr.io/smiling-wind-475918-h0/recipe-backend:${{ github.sha }} \
          --region ${{ secrets.GCP_REGION }} \
          --platform managed \
          --allow-unauthenticated \
          --port 5000 \
          --memory 512Mi \
          --cpu 1

    # 14Ô∏è‚É£ Desplegar frontend en Cloud Run
    - name: Deploy frontend to Cloud Run
      if: success()
      run: |
        gcloud run deploy recipe-frontend \
          --image gcr.io/smiling-wind-475918-h0/recipe-frontend:${{ github.sha }} \
          --region ${{ secrets.GCP_REGION }} \
          --platform managed \
          --allow-unauthenticated \
          --port 80 \
          --memory 512Mi \
          --cpu 1

    # 15Ô∏è‚É£ Mostrar URLs finales
    - name: Get deployed URLs
      if: success()
      run: |
        echo "‚úÖ Backend URL: $(gcloud run services describe recipe-backend --region=${{ secrets.GCP_REGION }} --format='value(status.url)')"
        echo "‚úÖ Frontend URL: $(gcloud run services describe recipe-frontend --region=${{ secrets.GCP_REGION }} --format='value(status.url)')"
